/*
 * rxSelect
 */
.rxSelect {
  z-index: 0; // creates local z-index stacking context
  .box-sizing(border-box);
  display: block;
  position: relative;
  color: @rxSelect-color;
  background: @rxSelect-background;
  .border-radius(@rxSelect-border-radius);

  // Element should be resizable via wrapper alone
  min-width: @rxSelect-min-width;
  height: @rxSelect-height;

  &.rx-disabled {
    color: @rxSelect-color-disabled;
    background: @rxSelect-background-disabled;
  }

  // position elements in wrapper
  select,
  rx-multi-select,
  .fake-select {
    .box-sizing(border-box);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  select,
  rx-multi-select {
    z-index: 0;
    cursor: pointer;

    // reset native styling
    border: 0 !important;
    outline: none !important;
    background: transparent;
    &:-moz-focusring {
      // FF uses text color to draw ring. Make it transparent
      color: transparent;
      // However, we still need to display our select <option> text
      text-shadow: 0 0 0 @rxSelect-color;
    }

    & + .fake-select {
      border-color: @rxSelect-border-color;
      border-width: 1px;
    }

    .disabled() {
      cursor: not-allowed;

      & + .fake-select {
        border-color: @rxSelect-border-color-disabled;
        border-width: 1px;

        .select-trigger {
          background: @rxSelect-background-disabled;
          border-left-width: 0;
          border-left-color: @rxSelect-color-disabled;
          color: @rxSelect-trigger-color-disabled;
        }
      }
    }//.disabled()

    &.ng-invalid.ng-dirty {
      & + .fake-select {
        border-color: @rxSelect-border-color-invalid;
        border-width: 2px;

        .select-trigger {
          color: @rxSelect-trigger-color-invalid;
        }
      }

      &[disabled] {
        .disabled();
      }
    }

    // Disabled Trumps All
    &[disabled] {
      .disabled();
    }
  }//select

  .fake-select {
    z-index: 10;
    border: @rxSelect-border-width solid @rxSelect-border-color;
    overflow: hidden;
    .border-radius(@rxSelect-border-radius);
    display: flex;
    justify-content: flex-end;
    flex-flow: row nowrap;

    // This allow pointer events to pass THROUGH to the
    // native <select> element
    pointer-events: none !important;

    // Custom trigger button will cover native <select> button
    .select-trigger {
      .box-sizing(border-box);
      width: @rxSelect-trigger-width;
      background: @rxSelect-trigger-background;
      color: @rxSelect-trigger-color;

      // perfectly center the trigger icon
      display: flex;
      align-items: center;
      justify-content: center;
    }//.select-trigger
  }//.fake-select
}//.rxSelect
