@import (reference) 'vars';

rx-date-picker {
  #vars.rxDatePicker();
  box-sizing: border-box;
  display: block;
  margin: 0;
  padding: 0;
  width: @control-width;

  .flexCentered() {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
  }//.flexCentered()

  &,
  &.ng-valid {
    .control {
      background-color: @control-background-color;
      border: 1px solid @control-border-color;
      box-sizing: border-box;
      color: @control-text-color;
      cursor: @control-cursor;
      height: @control-height;
      overflow: hidden;
      padding: @control-padding-x @control-padding-y;
      position: relative;

      .displayValue {
        background-color: transparent;
      }

      .overlay {
        align-items: center;
        background-color: transparent;
        box-sizing: border-box;
        display: flex;
        flex-flow: row nowrap;
        height: 100%;
        justify-content: flex-end;
        left: 0;
        padding: @control-padding-x @control-padding-y;
        position: absolute;
        top: 0;
        width: 100%;

        .icon {
          color: @control-icon-color;
          flex: 0 0 @control-icon-width;
          margin-left: @control-gutter;
        }//.icon
      }//.overlay
    }//.control
  }

  &.ng-invalid.ng-dirty {
    .control {
      border: 2px solid @invalid-control-border-color;
      // MUST differ with valid padding by 1px to account for thicker border
      padding: (@control-padding-x - 1) (@control-padding-y - 1);

      .icon {
        color: @invalid-control-icon-color;
      }
    }//.control
  }

  // Disabled styles should trump all other styles
  // !important is required to achieve this
  &[disabled] {
    .control {
      background-color: @disabled-control-background-color !important;
      border: 1px solid @disabled-control-border-color !important;
      color: @disabled-control-text-color !important;
      cursor: @disabled-control-cursor !important;

      .icon {
        color: @disabled-control-icon-color !important;
      }
    }
  }

  .popup {
    background-color: @popup-background-color;
    border-color: @popup-border-color;
    border-style: solid;
    border-width: 5px 1px 1px; // top border handled by <nav>
    border-top-color:  @popup-border-top-color;
    margin: 0;
    padding: 0;
    position: absolute;
    width: @popup-width;
    z-index: @popup-z-index;

    .circle {
      .border-radius(100%);
      .flexCentered();
      border: 1px solid transparent;
      box-sizing: border-box;
      flex: 0 0 100%;
      height: 100%;
      width: 100%;
    }//.circle

    .day,
    header h6 {
      .flexCentered();
      flex: 0 0 @day-width;
      height: @day-width;
    }

    .day {
      background-color: transparent;
      color: @day-text-color;
      cursor: pointer;

      &.outOfMonth {
        background-color: @out-of-month-day-background-color;
        cursor: default;
      }

      .circle {
        background-color: transparent;
      }
    }//.day

    nav {
      align-items: stretch;
      border-bottom: 2px solid @popup-border-color;
      color: @nav-text-color;
      cursor: default;
      display: flex;
      flex-flow: row nowrap;
      font-size: @nav-font-size;
      font-weight: bold;
      height: @nav-height;
      justify-content: center;

      span {
        .flexCentered();
        box-sizing: border-box;

        &.arrow {
          color: @nav-arrow-icon-color;
          cursor: pointer;
          flex: 0 0 @nav-arrow-width;

          &:hover {
            color: @nav-arrow-hover-icon-color;
          }
        }

        &.currentMonth {
          flex: 1;
        }
      }//span
    }//nav

    .calendar {
      .flexCentered();
      flex-flow: row wrap;

      header {
        .flexCentered();
        background-color: @header-background-color;
        border-bottom: 1px solid @header-border-bottom-color;
        color: @header-text-color;
        font-size: @header-font-size;
        font-weight: bold;
        height: @header-height;
        flex-flow: row nowrap;
        flex: 0 0 100%;
      }//header

      .day {
        &.today {
          .circle {
            border-color: @today-border-color;
          }
        }//.today

        &.selected {
          .circle {
            background-color: @selected-day-background-color;
            border-color: transparent;
            color: @selected-day-text-color;
          }
        }//.selected

        &:not(.selected):hover {
          .circle {
            background-color: @day-hover-background-color;
            color: @day-hover-text-color;
          }
        }//not(.selected):hover
      }//.day
    }//.calendar
  }//.calendar-selector
}//rx-date-picker
